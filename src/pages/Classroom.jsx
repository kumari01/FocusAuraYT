import { useState, useEffect, useRef } from "react";
import Navbar from "@/components/Navbar.jsx";
import Footer from "@/components/Footer.jsx";
import { ArrowLeft, BookOpen, Clock, NotebookPen, Download, Trash2, Save, Menu, X, ChevronRight } from "lucide-react";
import { useToast } from "@/Hooks/use-toast";

const Classroom = ({ videoId, onNavigateHome }) => {
  const [notes, setNotes] = useState("");
  const [studyTime, setStudyTime] = useState(0);
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const videoRef = useRef(null);
  const { toast } = useToast();

  // Load notes from localStorage on component mount
  useEffect(() => {
    const savedNotes = localStorage.getItem(`notes-${videoId}`);
    const savedTime = localStorage.getItem(`studyTime-${videoId}`);

    if (savedNotes) {
      setNotes(savedNotes);
    }
    if (savedTime) {
      setStudyTime(parseInt(savedTime, 10));
    }
  }, [videoId]);

  // Auto-save notes and study time
  useEffect(() => {
    if (notes) {
      localStorage.setItem(`notes-${videoId}`, notes);
    }
    localStorage.setItem(`studyTime-${videoId}`, studyTime.toString());
  }, [notes, studyTime, videoId]);

  useEffect(() => {
    const timer = setInterval(() => {
      setStudyTime(prev => prev + 1);
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  const formatTime = (seconds) => {
    const hours = Math.floor(seconds / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);
    const secs = seconds % 60;
    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
  };

  // Video control functions
  const pauseVideo = () => {
    if (videoRef.current) {
      videoRef.current.contentWindow.postMessage('{"event":"command","func":"pauseVideo","args":""}', '*');
    }
  };

  const resumeVideo = () => {
    if (videoRef.current) {
      videoRef.current.contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
    }
  };

  // Handle sidebar open/close with video pause/resume
  const handleSidebarOpen = () => {
    setIsSidebarOpen(true);
    pauseVideo();
  };

  const handleSidebarClose = () => {
    setIsSidebarOpen(false);
    resumeVideo();
  };

  const saveNotes = () => {
    if (notes.trim()) {
      localStorage.setItem(`notes-${videoId}`, notes);
      toast({
        title: "Notes Saved!",
        description: "Your notes have been saved to this browser.",
      });
    } else {
      toast({
        title: "No Notes to Save",
        description: "Please write some notes before saving.",
        variant: "destructive",
      });
    }
  };

  const exportNotes = () => {
    if (!notes.trim()) {
      toast({
        title: "No Notes to Export",
        description: "Please write some notes before exporting.",
        variant: "destructive",
      });
      return;
    }

    const currentDate = new Date().toLocaleDateString();
    const content = `# Study Notes - ${currentDate}
**Video ID:** ${videoId}
**Study Time:** ${formatTime(studyTime)}

---

${notes}

---
Generated by FocusAuraYT - Distraction-free YouTube learning`;

    const blob = new Blob([content], { type: 'text/markdown' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `study-notes-${videoId}-${new Date().toISOString().split('T')[0]}.md`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Notes Exported!",
      description: "Your notes have been downloaded as a Markdown file.",
    });
  };

  const clearNotes = () => {
    if (notes.trim()) {
      // Show confirmation toast instead of alert
      toast({
        title: "Clear All Notes?",
        description: "This action cannot be undone. Click Clear Notes again within 5 seconds to confirm.",
        variant: "destructive",
      });

      // Set a flag to handle the second click
      const confirmClear = () => {
        setNotes("");
        localStorage.removeItem(`notes-${videoId}`);
        toast({
          title: "Notes Cleared",
          description: "All notes have been cleared.",
        });
      };

      // Store the confirm function temporarily
      window.confirmClearNotes = confirmClear;

      // Clear the confirm function after 5 seconds
      setTimeout(() => {
        delete window.confirmClearNotes;
      }, 5000);

    } else {
      toast({
        title: "No Notes to Clear",
        description: "There are no notes to clear.",
        variant: "destructive",
      });
    }
  };

  const embedUrl = `https://www.youtube.com/embed/${videoId}?rel=0&modestbranding=1&showinfo=0&controls=1&autoplay=1`;

  return (
    <div className="min-h-screen bg-background font-poppins flex flex-col">
      <Navbar currentVideoId={videoId} isClassroomMode={true} onNavigateHome={onNavigateHome} currentPage="classroom" />

      <main className="pt-16 flex-1">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 min-h-[calc(100vh-10rem)]">
          {/* Header */}
          <div className="flex items-center justify-between mb-3 md:mb-6">
            <div className="flex items-center gap-2 md:gap-4">
              <button
                onClick={onNavigateHome}
                className="flex items-center gap-1 md:gap-2 mobile-btn md:px-4 md:py-2 bg-secondary hover:bg-accent text-foreground rounded-lg transition-all duration-300"
              >
                <ArrowLeft className="mobile-icon md:h-4 md:w-4" />
                <span className="mobile-text-xs md:text-sm">Back</span>
              </button>
              <div className="hidden sm:flex items-center gap-2 text-primary">
                <BookOpen className="mobile-icon md:h-5 md:w-5" />
                <h1 className="mobile-text-xs md:text-xl font-semibold">Classroom</h1>
              </div>
            </div>

            {/* Mobile Notes Toggle */}
            <button
              onClick={handleSidebarOpen}
              className="lg:hidden flex items-center gap-1 md:gap-2 mobile-btn md:px-4 md:py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-all duration-300"
            >
              <NotebookPen className="mobile-icon md:h-4 md:w-4" />
              <span className="mobile-text-xs md:text-sm">Notes</span>
            </button>
          </div>

          {/* Main Content Grid */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 relative">
            {/* Video Section */}
            <div className="lg:col-span-2">
              <div className="bg-card rounded-lg border border-border overflow-hidden shadow-lg">
                <div className="aspect-video">
                  <iframe
                    ref={videoRef}
                    src={`${embedUrl}&enablejsapi=1&origin=${window.location.origin}`}
                    title="YouTube video player"
                    className="w-full h-full"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    allowFullScreen
                    loading="lazy"
                  />
                </div>
              </div>

              {/* Study Stats */}
              <div className="mt-3 bg-card border border-border rounded-lg p-4">
                <h3 className="font-semibold text-foreground mb-3">Study Session</h3>
                <div className="space-y-2">
                  <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Session Time:</span>
                    <span className="text-sm font-mono text-foreground">{formatTime(studyTime)}</span>
                  </div>
                  {/* <div className="flex justify-between">
                    <span className="text-sm text-muted-foreground">Notes:</span>
                    <span className="text-sm text-foreground">{notes.split('\n').filter(line => line.trim()).length} lines</span>
                  </div> */}
                </div>
              </div>

              {/* Video Info */}
              <div className="mt-3 p-4 bg-card border border-border rounded-lg">
                <h2 className="text-lg font-semibold text-foreground mb-2">
                  Distraction-Free Learning
                </h2>
                <p className="text-sm text-muted-foreground">
                  Focus on your content without distractions. Use the notes section to take important points.
                </p>
              </div>
            </div>

            {/* Notes & Tools Section - Desktop */}
            <div className="hidden lg:block space-y-4">
              {/* Notes */}
              <div className="bg-card border border-border rounded-lg p-4">
                <div className="flex items-center justify-between mb-3">
                  <div className="flex items-center gap-2">
                    <NotebookPen className="h-4 w-4 text-primary" />
                    <h3 className="font-semibold text-foreground">Study Notes</h3>
                  </div>
                  <div className="flex items-center gap-2">
                    <button
                      onClick={saveNotes}
                      className="p-2 text-primary hover:text-primary-hover hover:bg-primary/10 rounded-lg transition-all duration-300"
                      title="Save Notes"
                    >
                      <Save className="h-4 w-4" />
                    </button>
                    <button
                      onClick={exportNotes}
                      className="p-2 text-green-600 hover:text-green-700 hover:bg-green-50 rounded-lg transition-all duration-300"
                      title="Export Notes"
                    >
                      <Download className="h-4 w-4" />
                    </button>
                    <button
                      onClick={() => {
                        if (window.confirmClearNotes) {
                          window.confirmClearNotes();
                          delete window.confirmClearNotes;
                        } else {
                          clearNotes();
                        }
                      }}
                      className="p-2 text-red-500 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all duration-300"
                      title="Clear Notes"
                    >
                      <Trash2 className="h-4 w-4" />
                    </button>
                  </div>
                </div>
                <textarea
                  value={notes}
                  onChange={(e) => setNotes(e.target.value)}
                  placeholder="Take your study notes here...

Tip: Press Enter to create new lines for better organization.
• Write key points from the video
• Note timestamps for important sections
• Add questions or thoughts

📝 Your notes are automatically saved to this browser and can be exported as a file!"
                  className="w-full h-96 p-3 bg-background border border-border rounded-lg text-foreground placeholder:text-muted-foreground resize-none focus:outline-none focus:ring-2 focus:ring-primary text-sm leading-relaxed"
                />
                <div className="mt-2 flex justify-between text-xs text-muted-foreground">
                  <span>{notes.length} characters</span>
                  <span>{notes.split('\n').filter(line => line.trim()).length} lines</span>
                </div>
              </div>



              {/* Study Tips */}
              <div className="bg-accent/50 border border-border rounded-lg p-4">
                <h3 className="font-semibold text-foreground mb-2">💡 Study Tips</h3>
                <ul className="text-xs text-muted-foreground space-y-1">
                  <li>• Take regular breaks every 25-30 minutes</li>
                  <li>• Write key points in the notes section</li>
                  <li>• Use fullscreen for better focus</li>
                  <li>• Pause and replay difficult sections</li>
                </ul>
              </div>
            </div>
          </div>

          {/* Mobile Notes Sidebar */}
          {isSidebarOpen && (
            <div className="fixed inset-0 bg-background/60 z-50 lg:hidden" onClick={handleSidebarClose} />
          )}

          <div className={`fixed top-0 right-0 h-full w-80 max-w-[95vw] landscape:max-w-[60vw] landscape:w-96 bg-card border-l border-border z-50 transform transition-transform duration-300 ease-in-out lg:hidden ${
            isSidebarOpen ? 'translate-x-0' : 'translate-x-full'
          }`}>
            <div className="flex flex-col h-full">
              {/* Sidebar Header */}
              <div className="flex items-center justify-between p-3 md:p-4 border-b border-border">
                <div className="flex items-center gap-2">
                  <NotebookPen className="h-4 w-4 md:h-5 md:w-5 text-primary" />
                  <h2 className="text-sm md:text-lg font-semibold text-foreground">Study Notes</h2>
                </div>
                <button
                  onClick={handleSidebarClose}
                  className="p-1.5 md:p-2 rounded-lg bg-secondary hover:bg-accent transition-all duration-300"
                  aria-label="Close notes"
                >
                  <X className="h-4 w-4 md:h-5 md:w-5 text-foreground" />
                </button>
              </div>

              {/* Action Buttons */}
              <div className="p-2 md:p-4 border-b border-border">
                <div className="flex items-center gap-1 md:gap-2 mb-2 md:mb-3">
                  <button
                    onClick={saveNotes}
                    className="flex-1 flex items-center justify-center gap-1 md:gap-2 p-1.5 md:p-2 text-primary hover:text-primary-hover bg-primary/10 hover:bg-primary/20 rounded-lg transition-all duration-300"
                  >
                    <Save className="h-3 w-3 md:h-4 md:w-4" />
                    <span className="text-xs md:text-sm font-medium">Save</span>
                  </button>
                  <button
                    onClick={exportNotes}
                    className="flex-1 flex items-center justify-center gap-1 md:gap-2 p-1.5 md:p-2 text-green-600 hover:text-green-700 bg-green-50 hover:bg-green-100 rounded-lg transition-all duration-300"
                  >
                    <Download className="h-3 w-3 md:h-4 md:w-4" />
                    <span className="text-xs md:text-sm font-medium">Export</span>
                  </button>
                  <button
                    onClick={() => {
                      if (window.confirmClearNotes) {
                        window.confirmClearNotes();
                        delete window.confirmClearNotes;
                      } else {
                        clearNotes();
                      }
                    }}
                    className="p-1.5 md:p-2 text-red-500 hover:text-red-600 bg-red-50 hover:bg-red-100 rounded-lg transition-all duration-300"
                    title="Clear Notes"
                  >
                    <Trash2 className="h-3 w-3 md:h-4 md:w-4" />
                  </button>
                </div>

                {/* Notes Stats */}
                <div className="flex justify-between text-xs text-muted-foreground px-1">
                  <span className="text-xs">{notes.length} chars</span>
                  <span className="text-xs">{notes.split('\n').filter(line => line.trim()).length} lines</span>
                </div>
              </div>

              {/* Notes Textarea */}
              <div className="flex-1 p-2 md:p-4 overflow-hidden">
                <textarea
                  value={notes}
                  onChange={(e) => setNotes(e.target.value)}
                  placeholder="📝 Take your study notes here...

• Write key points from the video
• Note timestamps for important sections
• Add questions or thoughts

Your notes auto-save and can be exported!"
                  className="w-full h-full p-2 md:p-3 bg-background border border-border rounded-lg text-foreground placeholder:text-muted-foreground resize-none focus:outline-none focus:ring-2 focus:ring-primary text-xs md:text-sm leading-relaxed landscape:text-sm"
                />
              </div>

              {/* Study Tips - Mobile */}
              <div className="p-2 md:p-4 border-t border-border landscape:hidden">
                <h3 className="font-semibold text-foreground mb-1 md:mb-2 text-xs md:text-sm">💡 Quick Tips</h3>
                <ul className="text-xs text-muted-foreground space-y-0.5 md:space-y-1">
                  <li>• Swipe to close this panel</li>
                  <li>• Notes auto-save as you type</li>
                  <li>• Export anytime as markdown</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </main>

      <div className="mt-auto">
        <Footer />
      </div>
    </div>
  );
};

export default Classroom;